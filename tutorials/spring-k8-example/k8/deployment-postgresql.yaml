apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        tier: database
    spec:
      containers:
        - name: postgresql
          image: postgres:13
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
               secretKeyRef:
                 key: password
                 name: postgresql-secret
            - name: DB_URL
              value: "jdbc:postgresql://postgresql:5432/postgres"
            - name: DB_USERNAME
              valueFrom: 
               secretKeyRef:
                 key: username
                 name: postgresql-secret
            - name: DB_PASSWORD
              valueFrom:
               secretKeyRef:
                 key: password
                 name: postgresql-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresql-storage
          resources:
            requests:
              memory: "512Mi"
              cpu: "500m"
            limits:
              memory: "1Gi"
              cpu: "1"
      volumes:
        - name: postgresql-storage
          persistentVolumeClaim:
            claimName: postgresql-pv-claim

---
# Define a 'Service' To Expose mysql to Other Services
apiVersion: v1
kind: Service
metadata:
  name: postgresql-svc  # DNS name
  labels:
    app: postgresql-svc
    tier: database
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:       # mysql Pod Should contain same labels
    app: postgresql
    tier: database
  clusterIP: None  # We Use DNS, Thus ClusterIP is not relevant


---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgresql-pv-claim # name of pvc essential for identifying the storage data
spec:
  resources:
    requests:
      storage: 1Gi  #this will tell kubernetes about the amount of space we are trying to claim
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce #This specifies the mode of the claim that we are trying to create.

  