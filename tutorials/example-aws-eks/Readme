## Project Example dockerize application and Deploy in AWS Kubernetes 

### Requirements 
```
Java 21
Docker installed
Minikube 
Kubectl 
Aws Cli 
ekscli
```
Note: If you have **sdkman** installed , the project contains a .sdkman file where it is configured with the java version.


### Steps to continue
 * Compile project 
 ```
  ./mvnw clean install -D skipTests

 ```
 * Docker build application 
 ```
 docker build -f Dockerfile_alpaquita -t spring-8k-aws . 
 ```
 * Aws configure , aws account and create ECR and Follow the steps to push imagen 
  to ECR.

 * AWS EKS create cluster from ekscli
  ```
  $ eksctl create cluster --name manuonda32-cluster --version 1.28 --nodes=1 --node-type=t2.small --region=us-east-1

  $ aws eks --region us-east-1 update-kubeconfig --name manuonda-cluster

  ```

 ### Links Resources 
 [Docker](https://docs.docker.com/engine/install/)
 
 [Minikube](https://minikube.sigs.k8s.io/docs/start/)

 [Kubectl](https://kubernetes.io/es/docs/reference/kubectl/)
 
 [Sdkman](https://sdkman.io/)
   
 [Aws cli](https://aws.amazon.com/cli/)
 
 [ekscli](https://eksctl.io/installation/)
