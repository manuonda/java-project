spring.application.name=order-service
server.port=8082
server.shutdown=graceful
 
# configure exclude datasource 
# spring.autoconfigure.exclude = org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration

catalog.page-size=10

######## Order Service Configuration  #########
orders.catalog-service-url=${ORDERS_CATALOG_SERVICE_URL:http://localhost:8081}
orders.order-events-exchange=orders-exchange
orders.new-orders-queue=new-orders
orders.delivered-orders-queue=delivered-orders
orders.cancelled-orders-queue=cancelled-orders
orders.error-orders-queue=error-orders

orders.publish-order-events-job-cron=*/5 * * * * *
orders.new-orders-job-cron=*/10 * * * * *



######## Actuator Configuration  #########
management.info.git.mode=full
management.endpoints.web.exposure.include=*
management.metrics.tags.application=${spring.application.name}
management.tracing.enabled=false
management.tracing.sampling.probability=1.0

###  DB Configuration ########
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:25432/postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.jpa.open-in-view=false
spring.jpa.show-sql=true


#### RabbitMQ Configuration ####
spring.rabbitmq.host=${RABBITMQ_HOST:localhost}
spring.rabbitmq.port=${RABBITMQ_PORT:5672}
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}


### configuratio user 
spring.security.user.name=root
spring.security.user.password=root


### Resilience4j Configuration 
resilience4j.retry.backends.catalog-service.max-attempts=2
resilience4j.retry.backends.catalog-service.wait-duration=1s

# Tipo de ventana deslizante usada para medir el rendimiento (basada en número de llamadas)
resilience4j.circuitbreaker.backends.catalog-service.sliding-window-type=COUNT_BASED

# Tamaño de la ventana deslizante (considera las últimas 6 llamadas)
resilience4j.circuitbreaker.backends.catalog-service.sliding-window-size=6

# Número mínimo de llamadas antes de calcular la tasa de fallos (mínimo 4 llamadas)
resilience4j.circuitbreaker.backends.catalog-service.minimum-number-of-calls=4

# Duración que el circuito permanecerá abierto antes de intentar pasar a medio abierto (20 segundos)
resilience4j.circuitbreaker.backends.catalog-service.wait-duration-in-open-state=20s

# Número de llamadas permitidas en estado medio abierto (2 llamadas)
resilience4j.circuitbreaker.backends.catalog-service.permitted-number-of-calls-in-half-open-state=2

# Umbral de la tasa de fallos para abrir el circuito (50% de las llamadas deben fallar)
resilience4j.circuitbreaker.backends.catalog-service.failure-rate-threshold=50
